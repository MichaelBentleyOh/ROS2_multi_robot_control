<?xml version="1.0"?>
<!-- 
    link : ${prefix}/link_name
    joint : ${prefix}_joint_name
    transmission : ${prefix}_transmission_name
    actuator : ${prefix}_actuator_name
    controller : ${prefix}_controller_name
-->
<!-- 
    This could be refactored to use xacro, but for simplicity, we keep it as a URDF.
    
    Also, ${prefix} is used to avoid name conflicts when multiple robots are spawned.
    The prefix is set to "robot1" in the launch file, but it can be changed to any other name.
    The prefix is used to differentiate between multiple robots in the same simulation
    environment.
    
    The prefix is used in 
        - the joint, link, transmission, actuator, and controller names.
        - the gazebo plugin to set the namespace for the robot.
        - the ros2_control plugin to set the namespace for the robot.
    
    Preix mehod could be refactored to other xacro method like "macro" or "arg" so that
        - it can be used in other robots as well. But for now, it is used only for this robot.
        - its name is not fixed to "robot1" but can be changed to any other name by lunch file.
    it should be developed in the future for better utilization.  
 -->
<robot name="SimpleDiffDriveRobot1" xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:property name="my_blue" value="0.0 0.5 1.0 1"/>
    <xacro:property name="my_red" value="1.0 0.2 0.2 1"/>
    <xacro:property name="prefix" value="robot2"/>
    <xacro:macro name="set_color_material" params="color">
        <visual>
        <material>
            <ambient>${color}</ambient>
            <diffuse>${color}</diffuse>
            <specular>1 1 1 1</specular>
        </material>
        </visual>
    </xacro:macro> 

    <link name="${prefix}/Dummy_Base"/>

    <link name="${prefix}/Body">
        <inertial>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <inertia ixy="0.0" ixx="0.15000002086163" izz="0.67500007152557" iyz="0.0" iyy="0.5550000667572" ixz="0.0" />
            <mass value="18.000001907349" />
        </inertial>
        <collision>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <box size="0.600000 0.300000 0.100000" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <box size="0.600000 0.300000 0.100000" />
            </geometry>
        </visual>
    </link>

    <gazebo reference="${prefix}/Body">
        <xacro:set_color_material color="${my_blue}"/> 
    </gazebo>
   
    <link name="${prefix}/LeftWheel">
        <inertial>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 -0.000000 0.000000" />
            <inertia ixy="0.0" ixx="0.020616704598069" izz="0.039760790765285" iyz="0.0" iyy="0.020616704598069" ixz="0.0" />
            <mass value="3.5342922210693" />
        </inertial>
        <collision>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <cylinder radius="0.15000000596046" length="0.050000000745058" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <cylinder radius="0.15000000596046" length="0.050000000745058" />
            </geometry>
        </visual>
    </link>

    <gazebo reference="${prefix}/LeftWheel">
        <xacro:set_color_material color="${my_red}"/> 
    </gazebo>
   
    <joint type="continuous" name="${prefix}_LeftMotor">
        <axis xyz="0 0 1" />
        <parent link="${prefix}/Body" />
        <child link="${prefix}/LeftWheel" />
        <origin rpy="-1.570795 3.141593 -3.141593" xyz="0.100000 0.300000 -0.000000" />
    </joint>

    <link name="${prefix}/RightWheel">
        <inertial>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 -0.000000 0.000000" />
            <inertia ixy="0.0" ixx="0.020616704598069" izz="0.039760790765285" iyz="0.0" iyy="0.020616704598069" ixz="0.0" />
            <mass value="3.5342922210693" />
        </inertial>
        <collision>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <cylinder radius="0.15000000596046" length="0.050000000745058" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <cylinder radius="0.15000000596046" length="0.050000000745058" />
            </geometry>
        </visual>
    </link>

    <gazebo reference="${prefix}/RightWheel">
        <xacro:set_color_material color="${my_red}"/> 
    </gazebo>

    <joint type="continuous" name="${prefix}_RightMotor">
        <axis xyz="0 0 1" />
        <parent link="${prefix}/Body" />
        <child link="${prefix}/RightWheel" />
        <origin rpy="-1.570796 3.141593 -3.141593" xyz="0.100000 -0.300000 0.000000" />
    </joint>

    <link name="${prefix}/CasterWheel">
        <inertial>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="-0.000000 0.000000 0.000000" />
            <inertia ixy="0.0" ixx="1.6362462702091e-05" izz="1.6362462702091e-05" iyz="0.0" iyy="1.6362462702091e-05" ixz="0.0" />
            <mass value="0.065449848771095" />
        </inertial>
        <collision>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <sphere radius="0.025000000372529" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="-3.141593 3.141593 -3.141593" xyz="0.000000 0.000000 0.000000" />
            <geometry>
                <sphere radius="0.025000000372529" />
            </geometry>
        </visual>
    </link>

    <gazebo reference="${prefix}/CasterWheel">
        <xacro:set_color_material color="${my_red}"/> 
    </gazebo>

    <joint type="continuous" name="${prefix}_CasterJoint">
        <axis xyz="0 0 1" />
        <parent link="${prefix}/Body" />
        <child link="${prefix}/CasterWheel" />
        <origin rpy="-3.141593 3.141593 -3.141593" xyz="-0.300000 -0.000000 -0.125000" />
    </joint>
    
    <joint name="${prefix}_dummy_base_to_body_link" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${prefix}/Dummy_Base" />
        <child link="${prefix}/Body" />
        <axis xyz="0 0 1" />
    </joint>
    <transmission name="${prefix}_CasterJoint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_CasterJoint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_Caster_act">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="${prefix}_LeftMotor_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_LeftMotor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_LeftMotor_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <transmission name="${prefix}_RightMotor_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="${prefix}_RightMotor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="${prefix}_RightMotor_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    
    <ros2_control name="IgnitionSystem" type="system">
    <hardware>
      <plugin>ign_ros2_control/IgnitionSystem</plugin>
    </hardware>
    <joint name="${prefix}_LeftMotor">
      <command_interface name="velocity">
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="${prefix}_RightMotor">
      <command_interface name="velocity">
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
      <state_interface name="effort"/>
    </joint>
    <joint name="${prefix}_CasterJoint">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
  </joint>
  </ros2_control>

  <gazebo>
     <plugin filename="ign_ros2_control-system" name="ign_ros2_control::IgnitionROS2ControlPlugin">
        <robot_param>robot_description</robot_param>
        <robot_param_node>robot_state_publisher</robot_param_node>
        <ros>
        <namespace>/${prefix}</namespace>
        </ros>
        <parameters>$(find simple_test)/robot_controllers_robot2.yaml</parameters>
    </plugin>  
  </gazebo>

</robot>
